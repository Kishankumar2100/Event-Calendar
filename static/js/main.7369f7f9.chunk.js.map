{"version":3,"sources":["util.js","context/GlobalContext.js","components/CalendarHeader.js","components/Day.js","components/Month.js","components/EventModal.js","App.js","reportWebVitals.js","context/ContextWrapper.js","index.js"],"names":["getMonth","month","dayjs","Math","floor","year","firstDayOfTheMonth","Date","day","currentMonthCount","daysMatrix","Array","fill","map","GlobalContext","React","createContext","monthIndex","setMonthIndex","index","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","dispatchCalEvent","type","payload","savedEvents","selectedEvent","setSelectedEvent","setLabels","labels","updateLabel","filteredEvents","CalendarHeader","useContext","className","onClick","random","format","Day","rowIdx","useState","dayEvents","setDayEvents","useEffect","events","filter","evt","toUpperCase","idx","label","title","Month","row","i","Fragment","labelsClasses","EventModal","setTitle","find","lbl","selectedLabel","setSelectedLabel","name","placeholder","value","required","onChange","e","target","lblClass","preventDefault","calendarEvent","valueOf","id","now","App","currenMonth","setCurrentMonth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","savedEventsReducer","state","Error","initEvents","storageEvents","localStorage","getItem","JSON","parse","ContextWrapper","props","useReducer","useMemo","checked","includes","setItem","stringify","prevLabels","Set","currentLabel","Provider","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7369f7f9.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\n\nexport function getMonth(month = dayjs().month()) {\n  month = Math.floor(month);\n  const year = dayjs().year();\n  const firstDayOfTheMonth = dayjs(new Date(year, month, 1)).day();\n  let currentMonthCount = 0 - firstDayOfTheMonth;\n  const daysMatrix = new Array(5).fill([]).map(() => {\n    return new Array(7).fill(null).map(() => {\n      currentMonthCount++;\n      return dayjs(new Date(year, month, currentMonthCount));\n    });\n  });\n  return daysMatrix;\n}\n","import React from \"react\";\n\nconst GlobalContext = React.createContext({\n  monthIndex: 0,\n  setMonthIndex: (index) => {},\n  smallCalendarMonth: 0,\n  setSmallCalendarMonth: (index) => {},\n  daySelected: null,\n  setDaySelected: (day) => {},\n  showEventModal: false,\n  setShowEventModal: () => {},\n  dispatchCalEvent: ({ type, payload }) => {},\n  savedEvents: [],\n  selectedEvent: null,\n  setSelectedEvent: () => {},\n  setLabels: () => {},\n  labels: [],\n  updateLabel: () => {},\n  filteredEvents: [],\n});\n\nexport default GlobalContext;\n","import dayjs from \"dayjs\";\nimport React, { useContext } from \"react\";\n// import logo from \"../assets/logo.png\";\nimport GlobalContext from \"../context/GlobalContext\";\nexport default function CalendarHeader() {\n  const { monthIndex, setMonthIndex } = useContext(GlobalContext);\n  function handlePrevMonth() {\n    setMonthIndex(monthIndex - 1);\n  }\n  function handleNextMonth() {\n    setMonthIndex(monthIndex + 1);\n  }\n  function handleReset() {\n    setMonthIndex(\n      monthIndex === dayjs().month()\n        ? monthIndex + Math.random()\n        : dayjs().month()\n    );\n  }\n  return (\n    <header className=\"px-4 py-2 flex items-center\">\n      {/* <img src={logo} alt=\"calendar\" className=\"mr-2 w-12 h-12\" /> */}\n      <h1 className=\"mr-10 text-xl text-gray-500 fond-bold\">\n       EventCalendar\n      </h1>\n      <button\n        onClick={handleReset}\n        className=\"border rounded py-2 px-4 mr-5\"\n      >\n        Today\n      </button>\n      <button onClick={handlePrevMonth}>\n        <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n          chevron_left\n        </span>\n      </button>\n      <button onClick={handleNextMonth}>\n        <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n          chevron_right\n        </span>\n      </button>\n      <h2 className=\"ml-4 text-xl text-gray-500 font-bold\">\n        {dayjs(new Date(dayjs().year(), monthIndex)).format(\n          \"MMMM YYYY\"\n        )}\n      </h2>\n    </header>\n  );\n}\n","import dayjs from \"dayjs\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\n\nexport default function Day({ day, rowIdx }) {\n  const [dayEvents, setDayEvents] = useState([]);\n  const {\n    setDaySelected,\n    setShowEventModal,\n    filteredEvents,\n    setSelectedEvent,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const events = filteredEvents.filter(\n      (evt) =>\n        dayjs(evt.day).format(\"DD-MM-YY\") === day.format(\"DD-MM-YY\")\n    );\n    setDayEvents(events);\n  }, [filteredEvents, day]);\n\n  function getCurrentDayClass() {\n    return day.format(\"DD-MM-YY\") === dayjs().format(\"DD-MM-YY\")\n      ? \"bg-gray-600 text-white rounded-full w-7\"\n      : \"\";\n  }\n  return (\n    <div className=\"border border-gray-200 flex flex-col\">\n      <header className=\"flex flex-col items-center\">\n        {rowIdx === 0 && (\n          <p className=\"text-sm mt-1\">\n            {day.format(\"ddd\").toUpperCase()}\n          </p>\n        )}\n        <p\n          className={`text-sm p-1 my-1 text-center  ${getCurrentDayClass()}`}\n        >\n          {day.format(\"DD\")}\n        </p>\n      </header>\n      <div\n        className=\"flex-1 cursor-pointer\"\n        onClick={() => {\n          setDaySelected(day);\n          setShowEventModal(true);\n        }}\n      >\n        {dayEvents.map((evt, idx) => (\n          <div\n            key={idx}\n            onClick={() => setSelectedEvent(evt)}\n            className={`bg-${evt.label}-200 p-1 mr-3 text-gray-600 text-sm rounded mb-1 truncate`}\n          >\n            {evt.title}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Day from \"./Day\";\nexport default function Month({ month }) {\n  return (\n    <div className=\"flex-1 grid grid-cols-7 grid-rows-5\">\n      {month.map((row, i) => (\n        <React.Fragment key={i}>\n          {row.map((day, idx) => (\n            <Day day={day} key={idx} rowIdx={i} />\n          ))}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\n\nconst labelsClasses = [\n  \n  \"green\",\n  \"red\",\n  \"blue\",\n \n  \n];\n\nexport default function EventModal() {\n  const {\n    setShowEventModal,\n    daySelected,\n    dispatchCalEvent,\n    selectedEvent,\n  } = useContext(GlobalContext);\n\n  const [title, setTitle] = useState(\n    selectedEvent ? selectedEvent.title : \"\"\n  );\n  \n  const [selectedLabel, setSelectedLabel] = useState(\n    selectedEvent\n      ? labelsClasses.find((lbl) => lbl === selectedEvent.label)\n      : labelsClasses[0]\n  );\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const calendarEvent = {\n      title,\n     \n      label: selectedLabel,\n      day: daySelected.valueOf(),\n      id: selectedEvent ? selectedEvent.id : Date.now(),\n    };\n    if (selectedEvent) {\n      dispatchCalEvent({ type: \"update\", payload: calendarEvent });\n    } else {\n      dispatchCalEvent({ type: \"push\", payload: calendarEvent });\n    }\n\n    setShowEventModal(false);\n  }\n  return (\n    <div className=\"h-screen w-full fixed left-0 top-0 flex justify-center items-center\">\n      <form className=\"bg-white rounded-lg shadow-2xl w-1/4\">\n        <header className=\"bg-gray-100 px-4 py-2 flex justify-between items-center\">\n          <span className=\"material-icons-outlined text-gray-400\">\n            drag_handle\n          </span>\n          <div>\n            {selectedEvent && (\n              <span\n                onClick={() => {\n                  dispatchCalEvent({\n                    type: \"delete\",\n                    payload: selectedEvent,\n                  });\n                  setShowEventModal(false);\n                }}\n                className=\"material-icons-outlined text-gray-400 cursor-pointer\"\n              >\n                delete\n              </span>\n            )}\n            <button onClick={() => setShowEventModal(false)}>\n              <span className=\"material-icons-outlined text-gray-400\">\n                close\n              </span>\n            </button>\n          </div>\n        </header>\n        <div className=\"p-3\">\n          <div className=\"grid grid-cols-1/5 items-end gap-y-7\">\n            <div></div>\n            <input\n              type=\"text\"\n              name=\"Event\"\n              placeholder=\"Add Event\"\n              value={title}\n              required\n              className=\"pt-3 border-0 text-gray-600 text-xl font-semibold pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus:ring-0 focus:border-blue-500\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <span className=\"material-icons-outlined text-gray-400\">\n              schedule\n            </span>\n            <p>{daySelected.format(\"dddd, MMMM DD\")}</p>\n            <span className=\"material-icons-outlined text-gray-400\">\n              segment\n            </span>\n        \n            <div className=\"flex gap-x-2\">\n              {labelsClasses.map((lblClass, i) => (\n                <span\n                  key={i}\n                  onClick={() => setSelectedLabel(lblClass)}\n                  className={`bg-${lblClass}-500 w-6 h-6 rounded-full flex items-center justify-center cursor-pointer`}\n                >\n                  {selectedLabel === lblClass && (\n                    <span className=\"material-icons-outlined text-white text-sm\">\n                      check\n                    </span>\n                  )}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n        <footer className=\"flex justify-end border-t p-3 mt-5\">\n          <button\n            type=\"submit\"\n            onClick={handleSubmit}\n            className=\"bg-blue-500 hover:bg-blue-600 px-6 py-2 rounded text-white\"\n          >\n            Save\n          </button>\n        </footer>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getMonth } from \"./util\";\nimport CalendarHeader from \"./components/CalendarHeader\";\n\nimport Month from \"./components/Month\";\nimport GlobalContext from \"./context/GlobalContext\";\nimport EventModal from \"./components/EventModal\";\nfunction App() {\n  const [currenMonth, setCurrentMonth] = useState(getMonth());\n  const { monthIndex, showEventModal } = useContext(GlobalContext);\n\n  useEffect(() => {\n    setCurrentMonth(getMonth(monthIndex));\n  }, [monthIndex]);\n\n  return (\n    <React.Fragment>\n      {showEventModal && <EventModal />}\n\n      <div className=\"h-screen flex flex-col\">\n        <CalendarHeader />\n        <div className=\"flex flex-1\">\n          \n          <Month month={currenMonth} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useMemo,\n} from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from \"dayjs\";\n\nfunction savedEventsReducer(state, { type, payload }) {\n  switch (type) {\n    case \"push\":\n      return [...state, payload];\n    case \"update\":\n      return state.map((evt) =>\n        evt.id === payload.id ? payload : evt\n      );\n    case \"delete\":\n      return state.filter((evt) => evt.id !== payload.id);\n    default:\n      throw new Error();\n  }\n}\nfunction initEvents() {\n  const storageEvents = localStorage.getItem(\"savedEvents\");\n  const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n  return parsedEvents;\n}\n\nexport default function ContextWrapper(props) {\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\n  const [daySelected, setDaySelected] = useState(dayjs());\n  const [showEventModal, setShowEventModal] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [labels, setLabels] = useState([]);\n  const [savedEvents, dispatchCalEvent] = useReducer(\n    savedEventsReducer,\n    [],\n    initEvents\n  );\n\n  const filteredEvents = useMemo(() => {\n    return savedEvents.filter((evt) =>\n      labels\n        .filter((lbl) => lbl.checked)\n        .map((lbl) => lbl.label)\n        .includes(evt.label)\n    );\n  }, [savedEvents, labels]);\n\n  useEffect(() => {\n    localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n  }, [savedEvents]);\n\n  useEffect(() => {\n    setLabels((prevLabels) => {\n      return [...new Set(savedEvents.map((evt) => evt.label))].map(\n        (label) => {\n          const currentLabel = prevLabels.find(\n            (lbl) => lbl.label === label\n          );\n          return {\n            label,\n            checked: currentLabel ? currentLabel.checked : true,\n          };\n        }\n      );\n    });\n  }, [savedEvents]);\n\n  useEffect(() => {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n\n  useEffect(() => {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n\n  function updateLabel(label) {\n    setLabels(\n      labels.map((lbl) => (lbl.label === label.label ? label : lbl))\n    );\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        monthIndex,\n        setMonthIndex,\n        smallCalendarMonth,\n        setSmallCalendarMonth,\n        daySelected,\n        setDaySelected,\n        showEventModal,\n        setShowEventModal,\n        dispatchCalEvent,\n        selectedEvent,\n        setSelectedEvent,\n        savedEvents,\n        setLabels,\n        labels,\n        updateLabel,\n        filteredEvents,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nReactDOM.render(\n  <React.StrictMode>\n    <ContextWrapper>\n      <App />\n    </ContextWrapper>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}